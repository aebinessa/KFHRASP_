@page "/adddepartment"
@using System.ComponentModel.DataAnnotations
@inject HttpClient Http
@inject GlobalAppState AppState
@inject NavigationManager Navigation

<div class="header">
    <div class="info">
        <h1>All Departments</h1>
        <div class="breadcrumb">
            <a href="/alldepartments" class="breadcrumb-link">All Departments</a> &gt; <span class="breadcrumb-current"> Add Department </span>
        </div>
    </div>
    <div class="user-info">
        <NavLink href="/counter" class="center">
            <img src="notification.png" />
        </NavLink>
        <img src="@AppState.EmployeePic" alt="Profile Picture" class="center" />
        <div>
            <h2>@AppState.EmployeeName</h2>
            <p>HR Manager</p>
        </div>
    </div>
</div>

<div class="container">
    <EditForm Model="@department" OnValidSubmit="@HandleValidSubmit">
        <DataAnnotationsValidator />
        <ValidationSummary />

        <div class="form-row">
            <div class="form-group">
                <label for="departmentName">Department Name</label>
                <InputText id="departmentName" @bind-Value="department.DepartmentName" placeholder="Department Name" />
                <ValidationMessage For="@(() => department.DepartmentName)" />
            </div>
        </div>

        <div class="form-actions">
            <button type="button" @onclick="Cancel" class="cancel-button">Cancel</button>
            <button type="submit" class="save-button">Save</button>
        </div>
    </EditForm>
</div>

@code {
    private AddDepartment department = new AddDepartment();

    private async Task HandleValidSubmit()
    {
        try
        {
            if (AppState != null && !string.IsNullOrEmpty(AppState.AuthToken))
            {
                Http.DefaultRequestHeaders.Authorization = new System.Net.Http.Headers.AuthenticationHeaderValue("Bearer", AppState.AuthToken);
                var response = await Http.PostAsJsonAsync("https://kfhrbackend20240528002909.azurewebsites.net/api/Admin/AddDepartment", department);

                if (response.IsSuccessStatusCode)
                {
                    Navigation.NavigateTo("/alldepartments");
                }
                else
                {
                    var errorContent = await response.Content.ReadAsStringAsync();
                    Console.WriteLine($"Error adding department: {response.ReasonPhrase}, Content: {errorContent}");
                }
            }
            else
            {
                Console.WriteLine("AppState is null or AuthToken is missing");
            }
        }
        catch (HttpRequestException httpEx)
        {
            Console.WriteLine($"HTTP error adding department: {httpEx.Message}");
        }
        catch (Exception ex)
        {
            Console.WriteLine($"General error adding department: {ex.Message}");
        }
    }

    private void Cancel()
    {
        Navigation.NavigateTo("/alldepartments");
    }
}

<style>
    .header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 20px;
    }

        .header .info h1 {
            margin: 0;
            font-size: 34px;
        }

        .header .info p {
            font-size: 14px;
            color: dimgrey;
        }

        .header .user-info {
            display: flex;
            align-items: center;
            margin: 1px;
            border: 1px solid #4B995C;
            border-radius: 10px;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
            padding: 10px;
            font-size: 24px;
            background-color: #e9f2eb;
        }

            .header .user-info h2 {
                font-size: 24px;
                margin-bottom: -3px;
            }

            .header .user-info p {
                font-size: 14px;
                margin-bottom: -3px;
            }

            .header .user-info img {
                border-radius: 50%;
                width: 50px;
                height: 50px;
                margin-right: 10px;
            }

    .breadcrumb {
        font-size: 14px;
        color: #777;
        display: flex;
        align-items: center;
    }

    .breadcrumb-link {
        color: #4B995C;
        text-decoration: none;
        transition: color 0.3s;
    }

        .breadcrumb-link:hover {
            color: #006400;
        }

    .breadcrumb-current {
        color: #333;
        margin-left: 5px;
    }

    .container {
        width: 60%;
        margin: 20px auto;
        background-color: #fff;
        padding: 20px;
        border-radius: 8px;
        box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
    }

    .form-row {
        display: flex;
        flex-wrap: wrap;
        justify-content: space-between;
    }

    .form-group {
        display: flex;
        flex-direction: column;
        margin-bottom: 15px;
        flex-basis: 48%;
    }

        .form-group label {
            font-size: 14px;
            margin-bottom: 5px;
            color: #555;
        }

        .form-group input,
        .form-group select {
            padding: 10px;
            font-size: 14px;
            border: 1px solid #ddd;
            border-radius: 4px;
            background-color: #f8f8f8;
        }

            .form-group input::placeholder {
                color: #aaa;
            }

    .form-actions {
        display: flex;
        justify-content: flex-end;
        margin-top: 20px;
    }

    .cancel-button,
    .save-button {
        padding: 10px 20px;
        font-size: 14px;
        border: none;
        border-radius: 4px;
        cursor: pointer;
    }

    .cancel-button {
        background-color: #fff;
        border: 1px solid #ddd;
        margin-right: 10px;
    }

    .save-button {
        background-color: #28a745;
        color: #fff;
    }

    .invalid {
        border-color: red;
    }

    .validation-message {
        color: red;
    }
</style>
