@page "/recommendations"

@using KFHRFrontEnd.Models
@using KFHRBackEnd.Models.Entites.Request
@using KFHRBackEnd.Models.Services
@using System.Net.Http.Json
@using System.IdentityModel.Tokens.Jwt
@using System.Security.Claims
@using KFHRFrontEnd.Models.Responses
@inject NavigationManager Navigation
@inject HttpClient Http
@inject GlobalAppState AppState

<EditForm Model="cert" OnValidSubmit="HandleValidSubmit">

    <DataAnnotationsValidator />

    <ValidationSummary />

    <div class="header">
        <div class="info">
            <h1>Recommendations</h1>
        </div>
        <div class="user-info">
            <NavLink href="/counter" class="center">
                <img src="notification.png" />
            </NavLink>
            <img src="@AppState.EmployeePic" alt="Profile Picture" class="center" />
            <div>
                <h2>@AppState.EmployeeName</h2>
                <p>HR Manager</p>
            </div>
        </div>
    </div>

    <div class="body">
        <div class="form-container">
            <div class="form-section horizontal-fields">
                <InputText id="name-of-certificate" @bind-Value="cert.CertificateName" placeholder="Name of Certificate" class="form-control" />
                <InputText id="organization" @bind-Value="cert.IssuingOrganization" placeholder="Organization" class="form-control" />
            </div>
            <div class="form-section">
                <InputText id="verification-url" @bind-Value="cert.CertificatePicture" placeholder="Verification URL" class="form-control" />
            </div>
            <div class="form-section">
                <InputNumber id="reward-points" @bind-Value="cert.RewardPoints" placeholder="Reward Points" class="form-control" />
                <InputText id="certification-detail" @bind-Value="cert.OrganizationWebsite" placeholder="Certification Detail" class="form-control" />
            </div>
            <div class="form-buttons">
                <button type="button" @onclick="NavDash" id="cancel-button">Cancel</button>
                <button type="submit" id="save-button">Save</button>
            </div>
        </div>
    </div>
</EditForm>


@code {

    private RecommendedCertificate cert = new RecommendedCertificate();
    private string errorMessage;

    private async Task HandleValidSubmit()
    {
        try
        {
            if (AppState != null && !string.IsNullOrEmpty(AppState.AuthToken))
            {
                Console.WriteLine($"AuthToken: {AppState.AuthToken}");
               

                var payload = new
                {
                    CertificateName = cert.CertificateName,
                    IssuingOrganization = cert.IssuingOrganization,
                    CertificatePicture = cert.CertificatePicture,
                    RewardPoints = cert.RewardPoints,
                    OrganizationWebsite = cert.OrganizationWebsite
                };

                Console.WriteLine($"Payload: {System.Text.Json.JsonSerializer.Serialize(payload)}");

                Http.DefaultRequestHeaders.Authorization = new System.Net.Http.Headers.AuthenticationHeaderValue("Bearer", AppState.AuthToken);

                var response = await Http.PostAsJsonAsync("https://kfhrbackend20240528002909.azurewebsites.net/api/Admin/AddRecommendedCertificate", payload);

                Console.WriteLine("HTTP response received");

                if (response.IsSuccessStatusCode)
                {
                    Console.WriteLine("Certificate added successfully");
                    Navigation.NavigateTo("/dashboard");
                }
                else
                {
                    var errorContent = await response.Content.ReadAsStringAsync();
                    Console.WriteLine($"Error adding certificate: {response.ReasonPhrase}, Content: {errorContent}");
                }
            }
            else
            {
                Console.WriteLine("AppState is null or AuthToken is missing");
            }
        }
        catch (HttpRequestException httpEx)
        {
            Console.WriteLine($"HTTP error adding certificate: {httpEx.Message}");
        }
        catch (Exception ex)
        {
            Console.WriteLine($"General error adding certificate: {ex.Message}");
        }
    }

    public void NavDash()
    {
        Navigation.NavigateTo("/dashboard");
    }
}
}
<style>
    .header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 20px;
    }

        .header .info h1 {
            margin: 0;
            font-size: 34px;
        }

        .header .info p {
            font-size: 14px;
            color: dimgrey;
        }

        .header .user-info {
            display: flex;
            align-items: center;
            margin: 1px;
            border: 1px solid #4B995C; /* Add border */
            border-radius: 10px; /* Optional: Add rounded corners */
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1); /* Add shadow */
            padding: 10px; /* Add padding to keep content away from borders */
            font-size: 24px;
            background-color: #e9f2eb;
        }

            .header .user-info h2 {
                font-size: 24px;
                margin-bottom: -3px;
            }

            .header .user-info p {
                font-size: 14px;
                margin-bottom: -3px;
            }

            .header .user-info img {
                border-radius: 50%;
                width: 50px;
                height: 50px;
                margin-right: 10px;
            }

    .body {
        font-family: Arial, sans-serif;
        background-color: #ffffff;
        margin: 0;
        padding: 0;
        display: flex;
        flex-direction: column;
        justify-content: center;
        align-items: center;
        height: 100vh;
    }

    .form-container {
        background-color: #fff;
        border: 1px solid #ddd;
        border-radius: 8px;
        padding: 20px;
        width: 80%;
        max-width: 800px;
        box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
        flex-grow: 1;
        display: flex;
        flex-direction: column;
        justify-content: center;
        margin-bottom: 20px;
    }

    .form {
        display: flex;
        flex-direction: column;
    }

    .form-row {
        display: flex;
        flex-wrap: wrap;
        justify-content: space-between;
    }

    .form-group {
        display: flex;
        flex-direction: column;
        margin-bottom: 15px;
        flex-basis: 70%;
    }

    .file-input {
        position: relative;
        display: flex;
        justify-content: center;
        align-items: center;
        width: 100px;
        height: 200px;
        max-width: 200px;
        max-height: 200px;
        border: 2px dashed #ddd;
        border-radius: 8px;
        background-color: #f8f8f8;
        cursor: pointer;
        overflow: hidden;
    }

        .file-input input[type="file"] {
            position: absolute;
            width: 100%;
            height: 100%;
            opacity: 0;
            cursor: pointer;
        }

        .file-input .file-label {
            display: flex;
            justify-content: center;
            align-items: center;
            width: 100%;
            height: 100%;
        }

            .file-input .file-label img {
                width: 24px;
                height: 24px;
            }

    .form-section {
        margin-bottom: 15px;
    }

    .horizontal-fields {
        display: flex;
        gap: 10px;
    }

        .horizontal-fields input[type="text"] {
            width: calc(50% - 5px); /* To ensure the gap is accounted for */
        }

    .form-section input[type="text"],
    .form-section textarea,
    .form-section input[type="date"] {
        width: 100%;
        padding: 10px;
        border: 1px solid #ddd;
        border-radius: 4px;
        font-size: 16px;
    }

    .form-section textarea {
        height: 100px;
        resize: none;
    }

    .image-upload {
        display: flex;
        justify-content: center;
        align-items: center;
        width: 100px;
        height: 100px;
        border: 1px solid #ddd;
        border-radius: 4px;
        margin: 0 auto 15px;
        cursor: pointer;
    }

    .upload-icon {
        font-size: 24px;
        color: #666;
    }

    .form-buttons {
        display: flex;
        justify-content: flex-end;
    }

    #cancel-button,
    #save-button {
        padding: 10px 20px;
        font-size: 16px;
        border: none;
        border-radius: 4px;
        cursor: pointer;
    }

    #cancel-button {
        background-color: #fff;
        border: 1px solid #ddd;
        color: #333;
        margin-right: 10px;
    }

        #cancel-button:hover {
            background-color: #f0f0f0;
        }

    #save-button {
        background-color: #4CAF50;
        color: #fff;
    }

        #save-button:hover {
            background-color: #45a049;
        }

    .error-message {
        color: red;
    }
</style>
